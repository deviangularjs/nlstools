#summary Grails Integration

= Introduction =

Use nlstools to generate the properties files under grails-app/i18n/messages*.properties for your Grails project.

Caution: The properties files for a grails project are stored in UTF-8 charset (in contrast to the java default for properties files).

This page show how to prepare the grails project for nlstools.

== Migration to nlstools ==

This describes how to generate the messages.xml file from the properties files. This happens only once when you a an existing grails project that you want to migrate to nlstools.

1. copy maven-ant-tasks-2.1.3.jar into grails app
This lets you use the artifacts for nlstools with ant from maven central. Alternatively, you could also create a maven pom (see maven integration).

Download the file from: http://maven.apache.org/ant-tasks/download.html

2. Create an ant build.xml file in grails app directory

{{{
<project name="nlstools-integrator" xmlns:artifact="antlib:maven-artifact-ant">
    <path id="maven-ant-tasks.classpath" path="maven-ant-tasks-2.1.3.jar"/>
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:maven-artifact-ant"
             classpathref="maven-ant-tasks.classpath"/>

    <target name="init">
        <artifact:dependencies pathid="toolspath">
            <dependency groupId="de.viaboxx" artifactId="nlstools" version="2.5.1"/>
        </artifact:dependencies>
    </target>

    <target name="reverse" depends="init" description="Einmalig aus .properties das i18n-xml File machen">
        <taskdef name="prop2xml"
                 classname="de.viaboxx.nlstools.tasks.Property2XMLConverterTask"
                 classpathref="toolspath"/>

        <prop2xml locales="en;de;zh" fromProperty="grails-app/i18n/messages"
                  to="i18n/messages.xml" fromCharset="UTF-8"
                  interfaceName="Messages"/>
    </target>
</project>

}}}

== Integration in grails build lifecycle ==